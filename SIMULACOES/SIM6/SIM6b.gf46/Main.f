!=======================================================================
! Generated by  : PSCAD v4.6.3.0
!
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'
!     SUBR    TRDQO         ! DQ0 transformation
      REAL    EMTDC_XPI     ! 'Proportional-Integral Controller /w Interpolation'
!     SUBR    3PHVSRC       ! 3-Phase Source model

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      INTEGER  IT_1, gaT, gaB, gbB, IT_2, gbT
      INTEGER  gcB, IT_3, gcT
      REAL     RT_1, RT_2, RT_3, theta, RT_4
      REAL     RT_5, RT_6, RT_7, RT_8, RT_9
      REAL     RT_10, RT_11, RT_12, RT_13, trig
      REAL     RT_14, RT_15, RT_16, En, Id, Iq
      REAL     Iqref, Idref, refd, refq, refa
      REAL     refb, refc, Vg(3), Ig(3)

! Internal Variables
      REAL     RVD2_1(2), RVD1_1, RVD1_2, RVD1_3
      REAL     RVD1_4

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 9
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 34
      IPGB      = NPGB
      NPGB      = NPGB + 13
      INODE     = NNODE + 2
      NNODE     = NNODE + 13
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 34
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      RT_1     = STOF(ISTOF + 1)
      RT_2     = STOF(ISTOF + 2)
      RT_3     = STOF(ISTOF + 3)
      theta    = STOF(ISTOF + 4)
      RT_4     = STOF(ISTOF + 5)
      RT_5     = STOF(ISTOF + 6)
      RT_6     = STOF(ISTOF + 7)
      RT_7     = STOF(ISTOF + 8)
      RT_8     = STOF(ISTOF + 9)
      RT_9     = STOF(ISTOF + 10)
      RT_10    = STOF(ISTOF + 11)
      RT_11    = STOF(ISTOF + 12)
      RT_12    = STOF(ISTOF + 13)
      RT_13    = STOF(ISTOF + 14)
      IT_1     = STOI(ISTOI + 1)
      trig     = STOF(ISTOF + 15)
      RT_14    = STOF(ISTOF + 16)
      RT_15    = STOF(ISTOF + 17)
      RT_16    = STOF(ISTOF + 18)
      En       = STOF(ISTOF + 19)
      gaT      = STOI(ISTOI + 2)
      gaB      = STOI(ISTOI + 3)
      gbB      = STOI(ISTOI + 4)
      IT_2     = STOI(ISTOI + 5)
      gbT      = STOI(ISTOI + 6)
      gcB      = STOI(ISTOI + 7)
      IT_3     = STOI(ISTOI + 8)
      gcT      = STOI(ISTOI + 9)
      Id       = STOF(ISTOF + 20)
      Iq       = STOF(ISTOF + 21)
      Iqref    = STOF(ISTOF + 22)
      Idref    = STOF(ISTOF + 23)
      refd     = STOF(ISTOF + 24)
      refq     = STOF(ISTOF + 25)
      refa     = STOF(ISTOF + 26)
      refb     = STOF(ISTOF + 27)
      refc     = STOF(ISTOF + 28)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Vg(IT_0) = STOF(ISTOF + 28 + IT_0)
         Ig(IT_0) = STOF(ISTOF + 31 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 50:[const] Real Constant 

      Idref = 0.1

! 60:[const] Real Constant 

      RT_12 = 0.0

! 70:[const] Real Constant 

      Iqref = 0.1

! 80:[signalgen] Signal Generator /w Interpolation 
      CALL COMPONENT_ID(ICALL_NO,1430419306)
      CALL E_XSGEN1_EXE(1,2000.0,RVD2_1)
      trig = RVD2_1(1)

! 90:[time-sig] Output of Simulation Time 
      RT_16 = TIME

! 100:[compare] Single Input Level Comparator 
!
!
      CALL EMTDC_X2COMP(0,0,0.1,RT_16,0.0,0.0,1.0,RVD2_1)
      En = RVD2_1(1)

! 110:[pgb] Output Channel 'Idref'

      PGB(IPGB+1) = Idref

! 120:[pgb] Output Channel 'Iqref'

      PGB(IPGB+2) = Iqref

! 190:[sumjct] Summing/Differencing Junctions 
      RT_9 = + Idref - Id

! 200:[mult] Multiplier 
      RT_8 = RT_9 * En

! 210:[pi_ctlr] PI Controller \w Interpolation 
      RVD1_1 = RTCF(NRTCF)
      NRTCF = NRTCF + 1
      RVD2_1(1) = RT_8
      RVD2_1(2) = 0.0
      refd = EMTDC_XPI(0,15.0,0.005,-1.0,1.0,RVD1_1,RVD2_1)

! 220:[sumjct] Summing/Differencing Junctions 
      RT_10 = + Iqref - Iq

! 230:[mult] Multiplier 
      RT_11 = RT_10 * En

! 240:[pi_ctlr] PI Controller \w Interpolation 
      RVD1_1 = RTCF(NRTCF)
      NRTCF = NRTCF + 1
      RVD2_1(1) = RT_11
      RVD2_1(2) = 0.0
      refq = EMTDC_XPI(0,15.0,0.005,-1.0,1.0,RVD1_1,RVD2_1)

! 250:[abcdq0] abc dq0 transformation 
!DQ0 to ABC transformation
      CALL TRDQO(refa,refb,refc,refd,refq,RT_12,theta,-1)

! 260:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,refc,trig,1.0,0.0,0.0,RVD2_1)
      RT_15 = RVD2_1(1)

! 270:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,refb,trig,1.0,0.0,0.0,RVD2_1)
      RT_14 = RVD2_1(1)

! 280:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,refa,trig,1.0,0.0,0.0,RVD2_1)
      RT_13 = RVD2_1(1)

! 290:[inv] Interpolated Logic Inverter 
      IF (NINT(RT_15) .NE. 0) THEN
         IT_3 = 0
      ELSE
         IT_3 = 1
      ENDIF

! 300:[inv] Interpolated Logic Inverter 
      IF (NINT(RT_14) .NE. 0) THEN
         IT_2 = 0
      ELSE
         IT_2 = 1
      ENDIF

! 310:[inv] Interpolated Logic Inverter 
      IF (NINT(RT_13) .NE. 0) THEN
         IT_1 = 0
      ELSE
         IT_1 = 1
      ENDIF

! 340:[pgb] Output Channel 'refc'

      PGB(IPGB+8) = refc

! 350:[pgb] Output Channel 'refb'

      PGB(IPGB+9) = refb

! 360:[pgb] Output Channel 'refa'

      PGB(IPGB+10) = refa

! 370:[pgb] Output Channel 'refq'

      PGB(IPGB+11) = refq

! 380:[pgb] Output Channel 'refd'

      PGB(IPGB+12) = refd

! 390:[logic_mult] Multiple Input Logic Gate 
!
! Multi input AND gate
!
      IF ( (IT_3 .NE. 0) .AND. (NINT(En) .NE. 0) ) THEN
        gcB = 1
      ELSE
        gcB = 0
      ENDIF

! 400:[logic_mult] Multiple Input Logic Gate 
!
! Multi input AND gate
!
      IF ( (NINT(RT_15) .NE. 0) .AND. (NINT(En) .NE. 0) ) THEN
        gcT = 1
      ELSE
        gcT = 0
      ENDIF

! 410:[logic_mult] Multiple Input Logic Gate 
!
! Multi input AND gate
!
      IF ( (IT_2 .NE. 0) .AND. (NINT(En) .NE. 0) ) THEN
        gbB = 1
      ELSE
        gbB = 0
      ENDIF

! 420:[logic_mult] Multiple Input Logic Gate 
!
! Multi input AND gate
!
      IF ( (NINT(RT_14) .NE. 0) .AND. (NINT(En) .NE. 0) ) THEN
        gbT = 1
      ELSE
        gbT = 0
      ENDIF

! 430:[logic_mult] Multiple Input Logic Gate 
!
! Multi input AND gate
!
      IF ( (IT_1 .NE. 0) .AND. (NINT(En) .NE. 0) ) THEN
        gaB = 1
      ELSE
        gaB = 0
      ENDIF

! 440:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1075157795)
      CALL PESWITCH1_EXE(SS, (IBRCH+18), gcB, 0.0)

! 450:[logic_mult] Multiple Input Logic Gate 
!
! Multi input AND gate
!
      IF ( (NINT(RT_13) .NE. 0) .AND. (NINT(En) .NE. 0) ) THEN
        gaT = 1
      ELSE
        gaT = 0
      ENDIF

! 460:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1097613992)
      CALL PESWITCH1_EXE(SS, (IBRCH+10), gbB, 0.0)

! 470:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1757427102)
      CALL PESWITCH1_EXE(SS, (IBRCH+7), gaB, 0.0)

! 490:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,919193464)
      CALL PESWITCH1_EXE(SS, (IBRCH+24), gcT, 0.0)

! 500:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1065325783)
      CALL PESWITCH1_EXE(SS, (IBRCH+16), gbT, 0.0)

! 510:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,102682175)
      CALL PESWITCH1_EXE(SS, (IBRCH+1), gaT, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,832789285)
      CALL PESWITCH1_EXE(SS, (IBRCH+3), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1954537221)
      CALL PESWITCH1_EXE(SS, (IBRCH+14), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1548052404)
      CALL PESWITCH1_EXE(SS, (IBRCH+22), 1, 0.0)

! 1:[source_1] Single Phase Voltage Source Model 2 'Source1'
!  DC source: Type: Ideal
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3 = RTCF(NRTCF+2)
      RVD1_4 = RTCF(NRTCF+3)
      NRTCF = NRTCF + 4
      CALL EMTDC_1PVSRC(SS, (IBRCH+9),RVD1_4,0,RVD1_1,RVD1_2,RVD1_3)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,897052400)
      CALL PESWITCH1_EXE(SS, (IBRCH+5), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1554158286)
      CALL PESWITCH1_EXE(SS, (IBRCH+12), 1, 0.0)

! 1:[source_3] Three Phase Voltage Source Model 2 'Source 1'
! Three Phase Source: Source 1  Type: L
!  
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3  = 0.0*PI_BY180
      RVD1_4 = RTCF(NRTCF+3)
      NRTCF  = NRTCF + 4
      CALL EMTDC_3PHVSRC(SS, (IBRCH+30), (IBRCH+31), (IBRCH+26), RVD1_4,&
     & .TRUE., RVD1_1 , RVD1_2, RVD1_3)
!

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,217224708)
      CALL PESWITCH1_EXE(SS, (IBRCH+20), 1, 0.0)

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 1) = RT_1
      STOF(ISTOF + 2) = RT_2
      STOF(ISTOF + 3) = RT_3
      STOF(ISTOF + 4) = theta
      STOF(ISTOF + 5) = RT_4
      STOF(ISTOF + 6) = RT_5
      STOF(ISTOF + 7) = RT_6
      STOF(ISTOF + 8) = RT_7
      STOF(ISTOF + 9) = RT_8
      STOF(ISTOF + 10) = RT_9
      STOF(ISTOF + 11) = RT_10
      STOF(ISTOF + 12) = RT_11
      STOF(ISTOF + 13) = RT_12
      STOF(ISTOF + 14) = RT_13
      STOI(ISTOI + 1) = IT_1
      STOF(ISTOF + 15) = trig
      STOF(ISTOF + 16) = RT_14
      STOF(ISTOF + 17) = RT_15
      STOF(ISTOF + 18) = RT_16
      STOF(ISTOF + 19) = En
      STOI(ISTOI + 2) = gaT
      STOI(ISTOI + 3) = gaB
      STOI(ISTOI + 4) = gbB
      STOI(ISTOI + 5) = IT_2
      STOI(ISTOI + 6) = gbT
      STOI(ISTOI + 7) = gcB
      STOI(ISTOI + 8) = IT_3
      STOI(ISTOI + 9) = gcT
      STOF(ISTOF + 20) = Id
      STOF(ISTOF + 21) = Iq
      STOF(ISTOF + 22) = Iqref
      STOF(ISTOF + 23) = Idref
      STOF(ISTOF + 24) = refd
      STOF(ISTOF + 25) = refq
      STOF(ISTOF + 26) = refa
      STOF(ISTOF + 27) = refb
      STOF(ISTOF + 28) = refc

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 28 + IT_0) = Vg(IT_0)
         STOF(ISTOF + 31 + IT_0) = Ig(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    EMTDC_VVDC    ! 
!     SUBR    TRDQO         ! DQ0 transformation
      REAL    VBRANCH       ! Voltage across the branch

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Electrical Node Indices
      INTEGER  NT_7(3)

! Control Signals
      REAL     RT_1, RT_2, RT_3, theta, RT_4
      REAL     RT_5, RT_6, RT_7, RT_12, Id, Iq
      REAL     Iqref, Idref, Vg(3), Ig(3)

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 13
      INODE     = NNODE + 2
      NNODE     = NNODE + 13
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 34
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      RT_1     = STOF(ISTOF + 1)
      RT_2     = STOF(ISTOF + 2)
      RT_3     = STOF(ISTOF + 3)
      theta    = STOF(ISTOF + 4)
      RT_4     = STOF(ISTOF + 5)
      RT_5     = STOF(ISTOF + 6)
      RT_6     = STOF(ISTOF + 7)
      RT_7     = STOF(ISTOF + 8)
      RT_12    = STOF(ISTOF + 13)
      Id       = STOF(ISTOF + 20)
      Iq       = STOF(ISTOF + 21)
      Iqref    = STOF(ISTOF + 22)
      Idref    = STOF(ISTOF + 23)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Vg(IT_0) = STOF(ISTOF + 28 + IT_0)
         Ig(IT_0) = STOF(ISTOF + 31 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_7(IT_0) = NODE(INODE + 2 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      Ig(1) = ( CBR((IBRCH+27), SS))
      Ig(2) = ( CBR((IBRCH+28), SS))
      Ig(3) = ( CBR((IBRCH+29), SS))
      Vg(1) = EMTDC_VVDC(SS, NT_7(1), 0)
      Vg(2) = EMTDC_VVDC(SS, NT_7(2), 0)
      Vg(3) = EMTDC_VVDC(SS, NT_7(3), 0)

! 20:[datatap] Scalar/Array Tap 
      RT_6 = Ig(3)

! 30:[datatap] Scalar/Array Tap 
      RT_5 = Ig(2)

! 40:[datatap] Scalar/Array Tap 
      RT_4 = Ig(1)

! 50:[const] Real Constant 

      Idref = 0.1

! 60:[const] Real Constant 

      RT_12 = 0.0

! 70:[const] Real Constant 

      Iqref = 0.1

! 130:[pgb] Output Channel 'Ig'

      DO IVD1_1 = 1, 3
         PGB(IPGB+3+IVD1_1-1) = Ig(IVD1_1)
      ENDDO

! 140:[datatap] Scalar/Array Tap 
      RT_3 = Vg(3)

! 150:[datatap] Scalar/Array Tap 
      RT_2 = Vg(2)

! 160:[datatap] Scalar/Array Tap 
      RT_1 = Vg(1)

! 170:[tvekta] Phase-Locked Loop 
      RVD1_1 = 0.0
      CALL COMPONENT_ID(ICALL_NO,711915759)
      CALL TVEKA1_EXE(RT_1,RT_2,RT_3,50.0,900.0,RVD1_1,0.05,1.2,0.8,thet&
     &a,RVD1_3,RVD1_2)
!

! 180:[abcdq0] abc dq0 transformation 
!ABC to DQ0 transformation
      CALL TRDQO(RT_4,RT_5,RT_6,Id,Iq,RT_7,theta,1)

! 320:[pgb] Output Channel 'Iq'

      PGB(IPGB+6) = Iq

! 330:[pgb] Output Channel 'Id'

      PGB(IPGB+7) = Id

! 480:[pgb] Output Channel 'theta'

      PGB(IPGB+13) = theta

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 1) = RT_1
      STOF(ISTOF + 2) = RT_2
      STOF(ISTOF + 3) = RT_3
      STOF(ISTOF + 4) = theta
      STOF(ISTOF + 5) = RT_4
      STOF(ISTOF + 6) = RT_5
      STOF(ISTOF + 7) = RT_6
      STOF(ISTOF + 8) = RT_7
      STOF(ISTOF + 13) = RT_12
      STOF(ISTOF + 20) = Id
      STOF(ISTOF + 21) = Iq
      STOF(ISTOF + 22) = Iqref
      STOF(ISTOF + 23) = Idref

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 28 + IT_0) = Vg(IT_0)
         STOF(ISTOF + 31 + IT_0) = Ig(IT_0)
      END DO


!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_12, Iqref, Idref

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 13
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 34
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 50:[const] Real Constant 
      Idref = 0.1

! 60:[const] Real Constant 
      RT_12 = 0.0

! 70:[const] Real Constant 
      Iqref = 0.1

! 80:[signalgen] Signal Generator /w Interpolation 
      CALL COMPONENT_ID(ICALL_NO,1430419306)
      CALL E_XSGEN1_CFG(1,0.0,50.0,1.0,-1.0)

! 90:[time-sig] Output of Simulation Time 

! 100:[compare] Single Input Level Comparator 

! 110:[pgb] Output Channel 'Idref'

! 120:[pgb] Output Channel 'Iqref'

! 190:[sumjct] Summing/Differencing Junctions 

! 200:[mult] Multiplier 

! 210:[pi_ctlr] PI Controller \w Interpolation 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 220:[sumjct] Summing/Differencing Junctions 

! 230:[mult] Multiplier 

! 240:[pi_ctlr] PI Controller \w Interpolation 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 250:[abcdq0] abc dq0 transformation 

! 260:[compar] Two Input Comparator 

! 270:[compar] Two Input Comparator 

! 280:[compar] Two Input Comparator 

! 290:[inv] Interpolated Logic Inverter 

! 300:[inv] Interpolated Logic Inverter 

! 310:[inv] Interpolated Logic Inverter 

! 340:[pgb] Output Channel 'refc'

! 350:[pgb] Output Channel 'refb'

! 360:[pgb] Output Channel 'refa'

! 370:[pgb] Output Channel 'refq'

! 380:[pgb] Output Channel 'refd'

! 440:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+19),SS,1,0,1,5000.0,0.0,0.05)

! 460:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+11),SS,1,0,1,5000.0,0.0,0.05)

! 470:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+8),SS,1,0,1,5000.0,0.0,0.05)

! 490:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+25),SS,1,0,1,5000.0,0.0,0.05)

! 500:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+17),SS,1,0,1,5000.0,0.0,0.05)

! 510:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+2),SS,1,0,1,5000.0,0.0,0.05)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+4),SS,1,0,1,5000.0,0.0,0.05)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+15),SS,1,0,1,5000.0,0.0,0.05)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+23),SS,1,0,1,5000.0,0.0,0.05)

! 1:[source_1] Single Phase Voltage Source Model 2 'Source1'
      CALL E_1PVSRC_CFG(0,0,6,0.5,60.0,0.0,0.0,0.0,0.0,0.0,0.0,0.01)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+6),SS,1,0,1,5000.0,0.0,0.05)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+13),SS,1,0,1,5000.0,0.0,0.05)

! 1:[source_3] Three Phase Voltage Source Model 2 'Source 1'
      IF (0.0001 .LE. 1.0E-38) THEN
        CALL E_BRANCH_CFG( (IBRCH+30),SS,1,0,0,1.0E-38,0.0,0.0)
        CALL E_BRANCH_CFG( (IBRCH+31),SS,1,0,0,1.0E-38,0.0,0.0)
        CALL E_BRANCH_CFG( (IBRCH+26),SS,1,0,0,1.0E-38,0.0,0.0)
      ELSE
        CALL E_BRANCH_CFG( (IBRCH+30),SS,0,1,0,0.0,0.0001,0.0)
        CALL E_BRANCH_CFG( (IBRCH+31),SS,0,1,0,0.0,0.0001,0.0)
        CALL E_BRANCH_CFG( (IBRCH+26),SS,0,1,0,0.0,0.0001,0.0)
      ENDIF
      RTCF(NRTCF)   = 0.22*SQRT_2*SQRT_1BY3
      RTCF(NRTCF+1) = 60.0*TWO_PI
      RTCF(NRTCF+3) = 0.001
      NRTCF = NRTCF + 4

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+21),SS,1,0,1,5000.0,0.0,0.05)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  NT_7(3)

! Control Signals
      REAL     RT_12, Iqref, Idref

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 13
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 34
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_7(IT_0) = NODE(INODE + 2 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5

! 20:[datatap] Scalar/Array Tap 

! 30:[datatap] Scalar/Array Tap 

! 40:[datatap] Scalar/Array Tap 

! 50:[const] Real Constant 
      Idref = 0.1

! 60:[const] Real Constant 
      RT_12 = 0.0

! 70:[const] Real Constant 
      Iqref = 0.1

! 130:[pgb] Output Channel 'Ig'

! 140:[datatap] Scalar/Array Tap 

! 150:[datatap] Scalar/Array Tap 

! 160:[datatap] Scalar/Array Tap 

! 170:[tvekta] Phase-Locked Loop 
      CALL TVEKA1_CFG(1.0,60.0)

! 180:[abcdq0] abc dq0 transformation 

! 320:[pgb] Output Channel 'Iq'

! 330:[pgb] Output Channel 'Id'

! 480:[pgb] Output Channel 'theta'

      RETURN
      END

