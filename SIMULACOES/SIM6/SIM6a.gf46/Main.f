!=======================================================================
! Generated by  : PSCAD v4.6.3.0
!
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      INTEGER  gaB, gbB, gcB
      REAL     gbT, gcT, refc, trig, refb, RT_1
      REAL     RT_2, RT_3, RT_4, RT_5, RT_6, RT_7
      REAL     RT_8, RT_9, gaT, Ig(3), refa

! Internal Variables
      REAL     RVD2_1(2), RVD1_1, RVD1_2, RVD1_3
      REAL     RVD1_4

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 3
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 19
      IPGB      = NPGB
      NPGB      = NPGB + 6
      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 28
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      gaB      = STOI(ISTOI + 1)
      gbB      = STOI(ISTOI + 2)
      gbT      = STOF(ISTOF + 1)
      gcB      = STOI(ISTOI + 3)
      gcT      = STOF(ISTOF + 2)
      refc     = STOF(ISTOF + 3)
      trig     = STOF(ISTOF + 4)
      refb     = STOF(ISTOF + 5)
      RT_1     = STOF(ISTOF + 6)
      RT_2     = STOF(ISTOF + 7)
      RT_3     = STOF(ISTOF + 8)
      RT_4     = STOF(ISTOF + 9)
      RT_5     = STOF(ISTOF + 10)
      RT_6     = STOF(ISTOF + 11)
      RT_7     = STOF(ISTOF + 12)
      RT_8     = STOF(ISTOF + 13)
      RT_9     = STOF(ISTOF + 14)
      gaT      = STOF(ISTOF + 15)
      refa     = STOF(ISTOF + 19)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Ig(IT_0) = STOF(ISTOF + 15 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 20:[const] Real Constant 

      RT_2 = 0.0

! 30:[const] Real Constant 

      RT_1 = 1.0

! 40:[const] Real Constant 

      RT_3 = 60.0

! 60:[const] Real Constant 

      RT_5 = -120.0

! 70:[const] Real Constant 

      RT_4 = 1.0

! 80:[const] Real Constant 

      RT_6 = 60.0

! 90:[const] Real Constant 

      RT_8 = 120.0

! 100:[const] Real Constant 

      RT_7 = 1.0

! 110:[const] Real Constant 

      RT_9 = 60.0

! 120:[signalgen] Signal Generator /w Interpolation 
      CALL COMPONENT_ID(ICALL_NO,1430419306)
      CALL E_XSGEN1_EXE(1,2000.0,RVD2_1)
      trig = RVD2_1(1)

! 130:[modulator] Amplitude/Frequency/Phase Modulator 
! AM/FM/PM MODULATOR
      refa = RT_1 * SIN(STORF(NSTORF) + RT_2*PI_BY180)
      STORF(NSTORF) = STORF(NSTORF) + TWO_PI*RT_3*DELT
      IF (STORF(NSTORF) .GT.  TWO_PI)  STORF(NSTORF) = STORF(NSTORF) - T&
     &WO_PI
      IF (STORF(NSTORF) .LT. -TWO_PI)  STORF(NSTORF) = STORF(NSTORF) + T&
     &WO_PI
      NSTORF = NSTORF+1
!

! 140:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,refa,trig,1.0,0.0,0.0,RVD2_1)
      gaT = RVD2_1(1)

! 150:[modulator] Amplitude/Frequency/Phase Modulator 
! AM/FM/PM MODULATOR
      refb = RT_4 * SIN(STORF(NSTORF) + RT_5*PI_BY180)
      STORF(NSTORF) = STORF(NSTORF) + TWO_PI*RT_6*DELT
      IF (STORF(NSTORF) .GT.  TWO_PI)  STORF(NSTORF) = STORF(NSTORF) - T&
     &WO_PI
      IF (STORF(NSTORF) .LT. -TWO_PI)  STORF(NSTORF) = STORF(NSTORF) + T&
     &WO_PI
      NSTORF = NSTORF+1
!

! 160:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,refb,trig,1.0,0.0,0.0,RVD2_1)
      gbT = RVD2_1(1)

! 170:[modulator] Amplitude/Frequency/Phase Modulator 
! AM/FM/PM MODULATOR
      refc = RT_7 * SIN(STORF(NSTORF) + RT_8*PI_BY180)
      STORF(NSTORF) = STORF(NSTORF) + TWO_PI*RT_9*DELT
      IF (STORF(NSTORF) .GT.  TWO_PI)  STORF(NSTORF) = STORF(NSTORF) - T&
     &WO_PI
      IF (STORF(NSTORF) .LT. -TWO_PI)  STORF(NSTORF) = STORF(NSTORF) + T&
     &WO_PI
      NSTORF = NSTORF+1
!

! 180:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,refc,trig,1.0,0.0,0.0,RVD2_1)
      gcT = RVD2_1(1)

! 190:[inv] Interpolated Logic Inverter 
      IF (NINT(gcT) .NE. 0) THEN
         gcB = 0
      ELSE
         gcB = 1
      ENDIF

! 200:[inv] Interpolated Logic Inverter 
      IF (NINT(gbT) .NE. 0) THEN
         gbB = 0
      ELSE
         gbB = 1
      ENDIF

! 210:[pgb] Output Channel 'trig'

      PGB(IPGB+4) = trig

! 220:[inv] Interpolated Logic Inverter 
      IF (NINT(gaT) .NE. 0) THEN
         gaB = 0
      ELSE
         gaB = 1
      ENDIF

! 230:[pgb] Output Channel 'gaT'

      PGB(IPGB+5) = gaT

! 240:[pgb] Output Channel 'refa'

      PGB(IPGB+6) = refa

! 250:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1075157795)
      CALL PESWITCH1_EXE(SS, (IBRCH+18), gcB, 0.0)

! 260:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1097613992)
      CALL PESWITCH1_EXE(SS, (IBRCH+10), gbB, 0.0)

! 270:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1757427102)
      CALL PESWITCH1_EXE(SS, (IBRCH+7), gaB, 0.0)

! 280:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,919193464)
      CALL PESWITCH1_EXE(SS, (IBRCH+24), NINT(gcT), 0.0)

! 290:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,1065325783)
      CALL PESWITCH1_EXE(SS, (IBRCH+16), NINT(gbT), 0.0)

! 300:[peswitch] Power electronic switch 
! Power Electronic Switch Model: IGBT
      CALL COMPONENT_ID(ICALL_NO,102682175)
      CALL PESWITCH1_EXE(SS, (IBRCH+1), NINT(gaT), 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,832789285)
      CALL PESWITCH1_EXE(SS, (IBRCH+3), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1954537221)
      CALL PESWITCH1_EXE(SS, (IBRCH+14), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1548052404)
      CALL PESWITCH1_EXE(SS, (IBRCH+22), 1, 0.0)

! 1:[source_1] Single Phase Voltage Source Model 2 'Source1'
!  DC source: Type: Ideal
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3 = RTCF(NRTCF+2)
      RVD1_4 = RTCF(NRTCF+3)
      NRTCF = NRTCF + 4
      CALL EMTDC_1PVSRC(SS, (IBRCH+9),RVD1_4,0,RVD1_1,RVD1_2,RVD1_3)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,897052400)
      CALL PESWITCH1_EXE(SS, (IBRCH+5), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,1554158286)
      CALL PESWITCH1_EXE(SS, (IBRCH+12), 1, 0.0)

! 1:[peswitch] Power electronic switch 
! Power Electronic Switch Model: Diode
      CALL COMPONENT_ID(ICALL_NO,217224708)
      CALL PESWITCH1_EXE(SS, (IBRCH+20), 1, 0.0)

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOI(ISTOI + 1) = gaB
      STOI(ISTOI + 2) = gbB
      STOF(ISTOF + 1) = gbT
      STOI(ISTOI + 3) = gcB
      STOF(ISTOF + 2) = gcT
      STOF(ISTOF + 3) = refc
      STOF(ISTOF + 4) = trig
      STOF(ISTOF + 5) = refb
      STOF(ISTOF + 6) = RT_1
      STOF(ISTOF + 7) = RT_2
      STOF(ISTOF + 8) = RT_3
      STOF(ISTOF + 9) = RT_4
      STOF(ISTOF + 10) = RT_5
      STOF(ISTOF + 11) = RT_6
      STOF(ISTOF + 12) = RT_7
      STOF(ISTOF + 13) = RT_8
      STOF(ISTOF + 14) = RT_9
      STOF(ISTOF + 15) = gaT
      STOF(ISTOF + 19) = refa

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 15 + IT_0) = Ig(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    VBRANCH       ! Voltage across the branch

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, RT_3, RT_4, RT_5, RT_6
      REAL     RT_7, RT_8, RT_9, Ig(3)

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 6
      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 28
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      RT_1     = STOF(ISTOF + 6)
      RT_2     = STOF(ISTOF + 7)
      RT_3     = STOF(ISTOF + 8)
      RT_4     = STOF(ISTOF + 9)
      RT_5     = STOF(ISTOF + 10)
      RT_6     = STOF(ISTOF + 11)
      RT_7     = STOF(ISTOF + 12)
      RT_8     = STOF(ISTOF + 13)
      RT_9     = STOF(ISTOF + 14)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Ig(IT_0) = STOF(ISTOF + 15 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      Ig(1) = ( CBR((IBRCH+26), SS))
      Ig(2) = ( CBR((IBRCH+27), SS))
      Ig(3) = ( CBR((IBRCH+28), SS))

! 20:[const] Real Constant 

      RT_2 = 0.0

! 30:[const] Real Constant 

      RT_1 = 1.0

! 40:[const] Real Constant 

      RT_3 = 60.0

! 50:[pgb] Output Channel 'Ig'

      DO IVD1_1 = 1, 3
         PGB(IPGB+1+IVD1_1-1) = Ig(IVD1_1)
      ENDDO

! 60:[const] Real Constant 

      RT_5 = -120.0

! 70:[const] Real Constant 

      RT_4 = 1.0

! 80:[const] Real Constant 

      RT_6 = 60.0

! 90:[const] Real Constant 

      RT_8 = 120.0

! 100:[const] Real Constant 

      RT_7 = 1.0

! 110:[const] Real Constant 

      RT_9 = 60.0

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 6) = RT_1
      STOF(ISTOF + 7) = RT_2
      STOF(ISTOF + 8) = RT_3
      STOF(ISTOF + 9) = RT_4
      STOF(ISTOF + 10) = RT_5
      STOF(ISTOF + 11) = RT_6
      STOF(ISTOF + 12) = RT_7
      STOF(ISTOF + 13) = RT_8
      STOF(ISTOF + 14) = RT_9

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 15 + IT_0) = Ig(IT_0)
      END DO


!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, RT_3, RT_4, RT_5, RT_6
      REAL     RT_7, RT_8, RT_9

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 28
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 20:[const] Real Constant 
      RT_2 = 0.0

! 30:[const] Real Constant 
      RT_1 = 1.0

! 40:[const] Real Constant 
      RT_3 = 60.0

! 60:[const] Real Constant 
      RT_5 = -120.0

! 70:[const] Real Constant 
      RT_4 = 1.0

! 80:[const] Real Constant 
      RT_6 = 60.0

! 90:[const] Real Constant 
      RT_8 = 120.0

! 100:[const] Real Constant 
      RT_7 = 1.0

! 110:[const] Real Constant 
      RT_9 = 60.0

! 120:[signalgen] Signal Generator /w Interpolation 
      CALL COMPONENT_ID(ICALL_NO,1430419306)
      CALL E_XSGEN1_CFG(1,0.0,50.0,1.0,-1.0)

! 130:[modulator] Amplitude/Frequency/Phase Modulator 

! 140:[compar] Two Input Comparator 

! 150:[modulator] Amplitude/Frequency/Phase Modulator 

! 160:[compar] Two Input Comparator 

! 170:[modulator] Amplitude/Frequency/Phase Modulator 

! 180:[compar] Two Input Comparator 

! 190:[inv] Interpolated Logic Inverter 

! 200:[inv] Interpolated Logic Inverter 

! 210:[pgb] Output Channel 'trig'

! 220:[inv] Interpolated Logic Inverter 

! 230:[pgb] Output Channel 'gaT'

! 240:[pgb] Output Channel 'refa'

! 250:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+19),SS,1,0,1,5000.0,0.0,0.05)

! 260:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+11),SS,1,0,1,5000.0,0.0,0.05)

! 270:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+8),SS,1,0,1,5000.0,0.0,0.05)

! 280:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+25),SS,1,0,1,5000.0,0.0,0.05)

! 290:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+17),SS,1,0,1,5000.0,0.0,0.05)

! 300:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(3, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+2),SS,1,0,1,5000.0,0.0,0.05)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+4),SS,1,0,1,5000.0,0.0,0.05)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+15),SS,1,0,1,5000.0,0.0,0.05)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+23),SS,1,0,1,5000.0,0.0,0.05)

! 1:[source_1] Single Phase Voltage Source Model 2 'Source1'
      CALL E_1PVSRC_CFG(0,0,6,0.5,60.0,0.0,0.0,0.0,0.0,0.0,0.0,0.01)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+6),SS,1,0,1,5000.0,0.0,0.05)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+13),SS,1,0,1,5000.0,0.0,0.05)

! 1:[peswitch] Power electronic switch 
      CALL PESWITCH1_CFG(0, 0,0.01, 1000000.0, 100000.0, 100000.0, 0.0, &
     &0.0)
      CALL E_BRANCH_CFG( (IBRCH+21),SS,1,0,1,5000.0,0.0,0.05)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, RT_3, RT_4, RT_5, RT_6
      REAL     RT_7, RT_8, RT_9

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 7
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 28
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5

! 20:[const] Real Constant 
      RT_2 = 0.0

! 30:[const] Real Constant 
      RT_1 = 1.0

! 40:[const] Real Constant 
      RT_3 = 60.0

! 50:[pgb] Output Channel 'Ig'

! 60:[const] Real Constant 
      RT_5 = -120.0

! 70:[const] Real Constant 
      RT_4 = 1.0

! 80:[const] Real Constant 
      RT_6 = 60.0

! 90:[const] Real Constant 
      RT_8 = 120.0

! 100:[const] Real Constant 
      RT_7 = 1.0

! 110:[const] Real Constant 
      RT_9 = 60.0

      RETURN
      END

