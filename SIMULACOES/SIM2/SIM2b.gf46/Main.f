!=======================================================================
! Generated by  : PSCAD v4.6.3.0
!
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  Bus1(3)

! Control Signals
      REAL     Pb, Pc, RT_1(2), RT_2(7), RT_3
      REAL     RT_4, RT_5, RT_6(7), RT_7(7), RT_8
      REAL     RT_9, RT_10, RT_11(7), RT_12(7)
      REAL     RT_13(7), RT_14, RT_15, RT_16
      REAL     RT_17, RT_18(4), Vc(3)

! Internal Variables
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD1_7

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 63
      NPGB      = NPGB + 6
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 30
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      Pb       = STOF(ISTOF + 1)
      Pc       = STOF(ISTOF + 2)
      RT_3     = STOF(ISTOF + 12)
      RT_4     = STOF(ISTOF + 13)
      RT_5     = STOF(ISTOF + 14)
      RT_8     = STOF(ISTOF + 29)
      RT_9     = STOF(ISTOF + 30)
      RT_10    = STOF(ISTOF + 31)
      RT_14    = STOF(ISTOF + 53)
      RT_15    = STOF(ISTOF + 54)
      RT_16    = STOF(ISTOF + 55)
      RT_17    = STOF(ISTOF + 56)

! Array (1:2) quantities...
      DO IT_0 = 1,2
         RT_1(IT_0) = STOF(ISTOF + 2 + IT_0)
      END DO

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Vc(IT_0) = STOF(ISTOF + 60 + IT_0)
      END DO

! Array (1:4) quantities...
      DO IT_0 = 1,4
         RT_18(IT_0) = STOF(ISTOF + 56 + IT_0)
      END DO

! Array (1:7) quantities...
      DO IT_0 = 1,7
         RT_2(IT_0) = STOF(ISTOF + 4 + IT_0)
         RT_6(IT_0) = STOF(ISTOF + 14 + IT_0)
         RT_7(IT_0) = STOF(ISTOF + 21 + IT_0)
         RT_11(IT_0) = STOF(ISTOF + 31 + IT_0)
         RT_12(IT_0) = STOF(ISTOF + 38 + IT_0)
         RT_13(IT_0) = STOF(ISTOF + 45 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         Bus1(IT_0) = NODE(INODE + 0 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
!  3-Phase source: Source1
      RVD1_1 = RTCF(NRTCF+12)
      RVD1_2 = RTCF(NRTCF+14)
      RVD1_3 = RTCF(NRTCF+13)
      CALL ESYS651_EXE(SS, (IBRCH+1), (IBRCH+2), (IBRCH+3),0,0,0, SS, Bu&
     &s1(1),Bus1(2),Bus1(3), 0, RVD1_2, RVD1_1, 0.05, 1.0, 1.0, 1.0,RVD1&
     &_3, 1.0, 0.02, 0.05, 1.0, 0.02, 0.05, RVD1_4, RVD1_5, RVD1_6, RVD1&
     &_7)

! 1:[fixed_load] Fixed Load 
      CALL LOAD3P1_EXE(SS, (IBRCH+7), (IBRCH+8), (IBRCH+9), (IBRCH+10), &
     &(IBRCH+11), (IBRCH+12))

! 1:[fixed_load] Fixed Load 
      CALL LOAD3P1_EXE(SS, (IBRCH+13), (IBRCH+14), (IBRCH+15), (IBRCH+4)&
     &, (IBRCH+5), (IBRCH+6))

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 1) = Pb
      STOF(ISTOF + 2) = Pc
      STOF(ISTOF + 12) = RT_3
      STOF(ISTOF + 13) = RT_4
      STOF(ISTOF + 14) = RT_5
      STOF(ISTOF + 29) = RT_8
      STOF(ISTOF + 30) = RT_9
      STOF(ISTOF + 31) = RT_10
      STOF(ISTOF + 53) = RT_14
      STOF(ISTOF + 54) = RT_15
      STOF(ISTOF + 55) = RT_16
      STOF(ISTOF + 56) = RT_17

! Array (1:2) quantities...
      DO IT_0 = 1,2
         STOF(ISTOF + 2 + IT_0) = RT_1(IT_0)
      END DO

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 60 + IT_0) = Vc(IT_0)
      END DO

! Array (1:4) quantities...
      DO IT_0 = 1,4
         STOF(ISTOF + 56 + IT_0) = RT_18(IT_0)
      END DO

! Array (1:7) quantities...
      DO IT_0 = 1,7
         STOF(ISTOF + 4 + IT_0) = RT_2(IT_0)
         STOF(ISTOF + 14 + IT_0) = RT_6(IT_0)
         STOF(ISTOF + 21 + IT_0) = RT_7(IT_0)
         STOF(ISTOF + 31 + IT_0) = RT_11(IT_0)
         STOF(ISTOF + 38 + IT_0) = RT_12(IT_0)
         STOF(ISTOF + 45 + IT_0) = RT_13(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    P3PH3         ! 
      REAL    EMTDC_VVDC    ! 
!     SUBR    FTN180        ! FFT Calculation

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Electrical Node Indices
      INTEGER  NT_2(3)

! Control Signals
      REAL     Pb, Pc, RT_1(2), RT_2(7), RT_3
      REAL     RT_4, RT_5, RT_6(7), RT_7(7), RT_8
      REAL     RT_9, RT_10, RT_11(7), RT_12(7)
      REAL     RT_13(7), RT_14, RT_15, RT_16
      REAL     RT_17, RT_18(4), Vc(3)

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 6
      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 30
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      Pb       = STOF(ISTOF + 1)
      Pc       = STOF(ISTOF + 2)
      RT_3     = STOF(ISTOF + 12)
      RT_4     = STOF(ISTOF + 13)
      RT_5     = STOF(ISTOF + 14)
      RT_8     = STOF(ISTOF + 29)
      RT_9     = STOF(ISTOF + 30)
      RT_10    = STOF(ISTOF + 31)
      RT_14    = STOF(ISTOF + 53)
      RT_15    = STOF(ISTOF + 54)
      RT_16    = STOF(ISTOF + 55)
      RT_17    = STOF(ISTOF + 56)

! Array (1:2) quantities...
      DO IT_0 = 1,2
         RT_1(IT_0) = STOF(ISTOF + 2 + IT_0)
      END DO

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Vc(IT_0) = STOF(ISTOF + 60 + IT_0)
      END DO

! Array (1:4) quantities...
      DO IT_0 = 1,4
         RT_18(IT_0) = STOF(ISTOF + 56 + IT_0)
      END DO

! Array (1:7) quantities...
      DO IT_0 = 1,7
         RT_2(IT_0) = STOF(ISTOF + 4 + IT_0)
         RT_6(IT_0) = STOF(ISTOF + 14 + IT_0)
         RT_7(IT_0) = STOF(ISTOF + 21 + IT_0)
         RT_11(IT_0) = STOF(ISTOF + 31 + IT_0)
         RT_12(IT_0) = STOF(ISTOF + 38 + IT_0)
         RT_13(IT_0) = STOF(ISTOF + 45 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_2(IT_0) = NODE(INODE + 12 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS, (IBRCH+19), (IBRCH+20), (IBRCH+2&
     &1),RTCF(IVD1_1+2),0)
      Pb = RVD1_1

! 20:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      Vc(1) = EMTDC_VVDC(SS, NT_2(1), 0)
      Vc(2) = EMTDC_VVDC(SS, NT_2(2), 0)
      Vc(3) = EMTDC_VVDC(SS, NT_2(3), 0)
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS, (IBRCH+16), (IBRCH+17), (IBRCH+1&
     &8),RTCF(IVD1_1+2),0)
      Pc = RVD1_1

! 30:[datamerge] Merges data signals into an array 
      RT_1(1) = Pb
      RT_1(2) = Pc

! 40:[pgb] Output Channel 'Potencias'

      DO IVD1_1 = 1, 2
         PGB(IPGB+1+IVD1_1-1) = RT_1(IVD1_1)
      ENDDO

! 50:[datatap] Scalar/Array Tap 
      RT_3 = Vc(1)

! 60:[datatap] Scalar/Array Tap 
      RT_4 = Vc(2)

! 70:[datatap] Scalar/Array Tap 
      RT_5 = Vc(3)

! 80:[fft] On-Line Frequency Scanner 
      IVD1_1=0
      CALL FTN180(0,1,7,1,60.0,60.0,RT_3,IVD1_1,RT_12,RT_6,RT_8)
      CALL FTN180(0,1,7,1,60.0,60.0,RT_4,IVD1_1,RT_11,RT_2,RT_10)
      CALL FTN180(0,1,7,1,60.0,60.0,RT_5,IVD1_1,RT_13,RT_7,RT_9)
!

! 90:[datatap] Scalar/Array Tap 
      RT_14 = RT_12(1)

! 100:[datatap] Scalar/Array Tap 
      RT_16 = RT_11(1)

! 110:[datatap] Scalar/Array Tap 
      RT_15 = RT_6(1)

! 120:[datatap] Scalar/Array Tap 
      RT_17 = RT_2(1)

! 130:[datamerge] Merges data signals into an array 
      RT_18(1) = RT_14
      RT_18(2) = RT_15
      RT_18(3) = RT_16
      RT_18(4) = RT_17

! 140:[pgb] Output Channel 'Fasor'

      DO IVD1_1 = 1, 4
         PGB(IPGB+3+IVD1_1-1) = RT_18(IVD1_1)
      ENDDO

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 1) = Pb
      STOF(ISTOF + 2) = Pc
      STOF(ISTOF + 12) = RT_3
      STOF(ISTOF + 13) = RT_4
      STOF(ISTOF + 14) = RT_5
      STOF(ISTOF + 29) = RT_8
      STOF(ISTOF + 30) = RT_9
      STOF(ISTOF + 31) = RT_10
      STOF(ISTOF + 53) = RT_14
      STOF(ISTOF + 54) = RT_15
      STOF(ISTOF + 55) = RT_16
      STOF(ISTOF + 56) = RT_17

! Array (1:2) quantities...
      DO IT_0 = 1,2
         STOF(ISTOF + 2 + IT_0) = RT_1(IT_0)
      END DO

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 60 + IT_0) = Vc(IT_0)
      END DO

! Array (1:4) quantities...
      DO IT_0 = 1,4
         STOF(ISTOF + 56 + IT_0) = RT_18(IT_0)
      END DO

! Array (1:7) quantities...
      DO IT_0 = 1,7
         STOF(ISTOF + 4 + IT_0) = RT_2(IT_0)
         STOF(ISTOF + 14 + IT_0) = RT_6(IT_0)
         STOF(ISTOF + 21 + IT_0) = RT_7(IT_0)
         STOF(ISTOF + 31 + IT_0) = RT_11(IT_0)
         STOF(ISTOF + 38 + IT_0) = RT_12(IT_0)
         STOF(ISTOF + 45 + IT_0) = RT_13(IT_0)
      END DO


!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables
      REAL     RVD1_1, RVD1_2

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 30
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
      CALL COMPONENT_ID(ICALL_NO,1172838013)
      RVD1_1 = 1.0
      RVD1_2 = 0.1
      CALL ESYS651_CFG(3,2,0,0,0,SS, (IBRCH+1), (IBRCH+2), (IBRCH+3),0,0&
     &,0, 60.0,60.0,0.0,230.0,0.0,0.0,100.0,230.0,230.0, 1.0,80.0,2.0,1.&
     &0,1.0,0.15, 1.0,80.0,RVD1_1,RVD1_2)

! 1:[fixed_load] Fixed Load 
      CALL LOAD1P1_CFG(132.790562,60.0,10.0,5.0,2.0,2.0,0.0,0.0)

! 1:[fixed_load] Fixed Load 
      CALL LOAD1P1_CFG(132.790562,60.0,8.0,2.0,2.0,2.0,0.0,0.0)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  NT_2(3)

! Control Signals

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 17
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 30
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_2(IT_0) = NODE(INODE + 12 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(100.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(100.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02

! 20:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(100.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(100.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02

! 30:[datamerge] Merges data signals into an array 

! 40:[pgb] Output Channel 'Potencias'

! 50:[datatap] Scalar/Array Tap 

! 60:[datatap] Scalar/Array Tap 

! 70:[datatap] Scalar/Array Tap 

! 80:[fft] On-Line Frequency Scanner 

! 90:[datatap] Scalar/Array Tap 

! 100:[datatap] Scalar/Array Tap 

! 110:[datatap] Scalar/Array Tap 

! 120:[datatap] Scalar/Array Tap 

! 130:[datamerge] Merges data signals into an array 

! 140:[pgb] Output Channel 'Fasor'

      RETURN
      END

