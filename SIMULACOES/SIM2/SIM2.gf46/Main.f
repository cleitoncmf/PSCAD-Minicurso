!=======================================================================
! Generated by  : PSCAD v4.6.3.0
!
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE MainDyn()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  NT_1(3)

! Control Signals
      REAL     Irmsa, RT_1, RT_2, RT_3, RT_4
      REAL     RT_5, RT_6, E3(3), Ia(3), Va(3)
      REAL     Pa, Vrmsa, phia

! Internal Variables
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD1_7

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 19
      NPGB      = NPGB + 4
      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 27
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      Irmsa    = STOF(ISTOF + 1)
      RT_1     = STOF(ISTOF + 2)
      RT_2     = STOF(ISTOF + 3)
      RT_3     = STOF(ISTOF + 4)
      RT_4     = STOF(ISTOF + 5)
      RT_5     = STOF(ISTOF + 6)
      RT_6     = STOF(ISTOF + 7)
      Pa       = STOF(ISTOF + 17)
      Vrmsa    = STOF(ISTOF + 18)
      phia     = STOF(ISTOF + 19)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         E3(IT_0) = STOF(ISTOF + 7 + IT_0)
         Ia(IT_0) = STOF(ISTOF + 10 + IT_0)
         Va(IT_0) = STOF(ISTOF + 13 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_1(IT_0) = NODE(INODE + 9 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
!  3-Phase source: Source1
      RVD1_1 = RTCF(NRTCF+12)
      RVD1_2 = RTCF(NRTCF+14)
      RVD1_3 = RTCF(NRTCF+13)
      CALL ESYS651_EXE(SS, (IBRCH+1), (IBRCH+2), (IBRCH+3),0,0,0, SS, NT&
     &_1(1),NT_1(2),NT_1(3), 0, RVD1_2, RVD1_1, 0.05, 1.0, 1.0, 1.0,RVD1&
     &_3, 1.0, 0.02, 0.05, 1.0, 0.02, 0.05, RVD1_4, RVD1_5, RVD1_6, RVD1&
     &_7)

! 1:[fixed_load] Fixed Load 
      CALL LOAD3P1_EXE(SS, (IBRCH+7), (IBRCH+8), (IBRCH+9), (IBRCH+10), &
     &(IBRCH+11), (IBRCH+12))

! 1:[fixed_load] Fixed Load 
      CALL LOAD3P1_EXE(SS, (IBRCH+13), (IBRCH+14), (IBRCH+15), (IBRCH+16&
     &), (IBRCH+17), (IBRCH+18))

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 1) = Irmsa
      STOF(ISTOF + 2) = RT_1
      STOF(ISTOF + 3) = RT_2
      STOF(ISTOF + 4) = RT_3
      STOF(ISTOF + 5) = RT_4
      STOF(ISTOF + 6) = RT_5
      STOF(ISTOF + 7) = RT_6
      STOF(ISTOF + 17) = Pa
      STOF(ISTOF + 18) = Vrmsa
      STOF(ISTOF + 19) = phia

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 7 + IT_0) = E3(IT_0)
         STOF(ISTOF + 10 + IT_0) = Ia(IT_0)
         STOF(ISTOF + 13 + IT_0) = Va(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    EMTDC_VVDC    ! 
      REAL    P3PH3         ! 
      REAL    VM3PH2        ! '3 Phase RMS Voltage Measurement'
      REAL    RMS3PH        ! '3 Phase RMS Measurement'
      REAL    REALPOLE      ! 
!     SUBR    MPHASE3PS     ! Phase Measurement in a 3p signal
      REAL    RMS3          ! 'Instantaneous RMS Measurement'

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Electrical Node Indices
      INTEGER  Bus3(3), NT_1(3)

! Control Signals
      REAL     Irmsa, RT_1, RT_2, RT_3, RT_4
      REAL     RT_5, RT_6, E3(3), Ia(3), Va(3)
      REAL     Pa, Vrmsa, phia

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 4
      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 27
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      Irmsa    = STOF(ISTOF + 1)
      RT_1     = STOF(ISTOF + 2)
      RT_2     = STOF(ISTOF + 3)
      RT_3     = STOF(ISTOF + 4)
      RT_4     = STOF(ISTOF + 5)
      RT_5     = STOF(ISTOF + 6)
      RT_6     = STOF(ISTOF + 7)
      Pa       = STOF(ISTOF + 17)
      Vrmsa    = STOF(ISTOF + 18)
      phia     = STOF(ISTOF + 19)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         E3(IT_0) = STOF(ISTOF + 7 + IT_0)
         Ia(IT_0) = STOF(ISTOF + 10 + IT_0)
         Va(IT_0) = STOF(ISTOF + 13 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         Bus3(IT_0) = NODE(INODE + 6 + IT_0)
         NT_1(IT_0) = NODE(INODE + 9 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      Ia(1) = ( CBR((IBRCH+4), SS))
      Ia(2) = ( CBR((IBRCH+5), SS))
      Ia(3) = ( CBR((IBRCH+6), SS))
      Va(1) = EMTDC_VVDC(SS, NT_1(1), 0)
      Va(2) = EMTDC_VVDC(SS, NT_1(2), 0)
      Va(3) = EMTDC_VVDC(SS, NT_1(3), 0)
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS, (IBRCH+4), (IBRCH+5), (IBRCH+6),&
     &RTCF(IVD1_1+2),0)
      Pa = RVD1_1
      RVD1_1 = RTCF(IVD1_1+1) * VM3PH2(SS, NT_1(1), NT_1(2), NT_1(3), RT&
     &CF(IVD1_1+2))
      Irmsa = RVD1_1
      RVD1_1 = RMS3PH(( CBR((IBRCH+4), SS)),( CBR((IBRCH+5), SS)),( CBR(&
     &(IBRCH+6), SS)))
      RVD1_1 = REALPOLE(0,1,0,RTCF(IVD1_1+4),RTCF(IVD1_1+2),RVD1_1,0.0,0&
     &.0,RTCF(IVD1_1+2))
      Vrmsa = RVD1_1
      RVD1_2 = EMTDC_VVDC(SS, NT_1(1), 0)
      RVD1_3 = EMTDC_VVDC(SS, NT_1(2), 0)
      RVD1_4 = EMTDC_VVDC(SS, NT_1(3), 0)
      CALL MPHASE3PS(1, 1, RVD1_2, RVD1_3, RVD1_4, RTCF(IVD1_1+2), RTCF(&
     &IVD1_1+3) , RVD1_1)
      phia = RVD1_1

! 20:[voltmetergnd] Voltmeter (Line - Ground) 'E3'
      E3(1) = EMTDC_VVDC(SS, Bus3(1), 0)
      E3(2) = EMTDC_VVDC(SS, Bus3(2), 0)
      E3(3) = EMTDC_VVDC(SS, Bus3(3), 0)

! 30:[pgb] Output Channel 'Irmsa'

      PGB(IPGB+1) = Irmsa

! 40:[datatap] Scalar/Array Tap 
      RT_2 = E3(1)

! 50:[datatap] Scalar/Array Tap 
      RT_4 = E3(2)

! 60:[datatap] Scalar/Array Tap 
      RT_6 = E3(3)

! 70:[rms-inst] Single Phase RMS Meter 
      RT_1 = RMS3( RT_2 , 0.02 )

! 80:[rms-inst] Single Phase RMS Meter 
      RT_3 = RMS3( RT_4 , 0.02 )

! 90:[rms-inst] Single Phase RMS Meter 
      RT_5 = RMS3( RT_6 , 0.02 )

! 100:[pgb] Output Channel 'E3c'

      PGB(IPGB+2) = RT_5

! 110:[pgb] Output Channel 'E3b'

      PGB(IPGB+3) = RT_3

! 120:[pgb] Output Channel 'E3a'

      PGB(IPGB+4) = RT_1

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 1) = Irmsa
      STOF(ISTOF + 2) = RT_1
      STOF(ISTOF + 3) = RT_2
      STOF(ISTOF + 4) = RT_3
      STOF(ISTOF + 5) = RT_4
      STOF(ISTOF + 6) = RT_5
      STOF(ISTOF + 7) = RT_6
      STOF(ISTOF + 17) = Pa
      STOF(ISTOF + 18) = Vrmsa
      STOF(ISTOF + 19) = phia

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 7 + IT_0) = E3(IT_0)
         STOF(ISTOF + 10 + IT_0) = Ia(IT_0)
         STOF(ISTOF + 13 + IT_0) = Va(IT_0)
      END DO


!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE MainDyn_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables
      REAL     RVD1_1, RVD1_2

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 27
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 1:[source3] Three Phase Voltage Source Model 1 'Source1'
      CALL COMPONENT_ID(ICALL_NO,1172838013)
      RVD1_1 = 1.0
      RVD1_2 = 0.1
      CALL ESYS651_CFG(3,2,0,0,0,SS, (IBRCH+1), (IBRCH+2), (IBRCH+3),0,0&
     &,0, 60.0,60.0,0.0,230.0,0.0,0.0,100.0,230.0,230.0, 1.0,80.0,2.0,1.&
     &0,1.0,0.15, 1.0,80.0,RVD1_1,RVD1_2)

! 1:[fixed_load] Fixed Load 
      CALL LOAD1P1_CFG(132.790562,60.0,50.0,10.0,2.0,2.0,0.0,0.0)

! 1:[fixed_load] Fixed Load 
      CALL LOAD1P1_CFG(132.790562,60.0,50.0,10.0,2.0,2.0,0.0,0.0)

      RETURN
      END

!=======================================================================

      SUBROUTINE MainOut_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  Bus3(3), NT_1(3)

! Control Signals

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 27
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         Bus3(IT_0) = NODE(INODE + 6 + IT_0)
         NT_1(IT_0) = NODE(INODE + 9 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02
      RTCF(IVD1_1+3) = 60.0
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+4) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1+4) = 1.0
      ENDIF

! 30:[pgb] Output Channel 'Irmsa'

! 40:[datatap] Scalar/Array Tap 

! 50:[datatap] Scalar/Array Tap 

! 60:[datatap] Scalar/Array Tap 

! 70:[rms-inst] Single Phase RMS Meter 

! 80:[rms-inst] Single Phase RMS Meter 

! 90:[rms-inst] Single Phase RMS Meter 

! 100:[pgb] Output Channel 'E3c'

! 110:[pgb] Output Channel 'E3b'

! 120:[pgb] Output Channel 'E3a'

      RETURN
      END

